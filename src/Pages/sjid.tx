try {
      const response = await axios.get(url);
      const obj = response.data;
      let gps = [];
      let names = [];

      // Extract latitude, longitude, and names from the fetched data
      obj.forEach((x) => {
        const latitude = x.fields["Latitude"] ? x.fields["Latitude"][0] : null;
        const longitude = x.fields["Longitude"]
          ? x.fields["Longitude"][0]
          : null;
        const name = x.fields["Name"] || null;
        if (latitude !== null && longitude !== null) {
          gps.push([parseFloat(latitude), parseFloat(longitude)]);
          names.push(name);
        }
      });

      const lat = latitudeInput;
      const long = longitudeInput;
      const maxDistance = maxDistanceInput;

      const user = [lat, long];

      // Calculate distances
      let distList = [];
      names.forEach((name, index) => {
        const coords = gps[index];
        if (coords[0] !== null && coords[1] !== null) {
          const distance = haversine(user[0], user[1], coords[0], coords[1]);
          distList.push({ distance, name, coords });
        }
      });

      // Filter locations within the maximum distance
      const filteredLocations = distList.filter(
        (item) => item.distance <= maxDistance
      );

      // Sort the filtered locations by distance
      filteredLocations.sort((a, b) => a.distance - b.distance);

      // Store all locations in state
      setLocations(filteredLocations);
    } catch (error) {
      console.error("Error fetching data:", error);
    }